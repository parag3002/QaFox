<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-08T20:22:09 IST" name="Suite" finished-at="2023-07-08T20:22:51 IST" duration-ms="42488">
    <groups>
    </groups>
    <test started-at="2023-07-08T20:22:09 IST" name="Test" finished-at="2023-07-08T20:22:51 IST" duration-ms="42488">
      <class name="testCase.TC1_SignUp">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCase.TC1_SignUp@27f981c6]" started-at="2023-07-08T20:22:09 IST" name="setup" finished-at="2023-07-08T20:22:12 IST" duration-ms="3374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC1_SignUp_method(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:testCase.TC1_SignUp@27f981c6]" started-at="2023-07-08T20:22:12 IST" name="TC1_SignUp_method" data-provider="dataToTC1_SignUP" finished-at="2023-07-08T20:22:24 IST" duration-ms="11369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Parag]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Das]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Arekere, Bangalore, KA]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Bangalore]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[KA]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[573134]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[8793748912]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1159302784]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[newUser34422]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Automation@123]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Automation@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC1_SignUp_method -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCase.TC1_SignUp@27f981c6]" started-at="2023-07-08T20:22:24 IST" name="tearDown" finished-at="2023-07-08T20:22:24 IST" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCase.TC1_SignUp -->
      <class name="testCase.TC2_Login">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCase.TC2_Login@60099951]" started-at="2023-07-08T20:22:24 IST" name="setup" finished-at="2023-07-08T20:22:26 IST" duration-ms="1704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC2_Login_method(java.lang.String,java.lang.String)[pri:2, instance:testCase.TC2_Login@60099951]" started-at="2023-07-08T20:22:26 IST" name="TC2_Login_method" data-provider="dataToTC2" finished-at="2023-07-08T20:22:29 IST" duration-ms="3397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[newUser34422]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Automation@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC2_Login_method -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCase.TC2_Login@60099951]" started-at="2023-07-08T20:22:29 IST" name="tearDown" finished-at="2023-07-08T20:22:29 IST" duration-ms="162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCase.TC2_Login -->
      <class name="testCase.TC3_IFSC_RBI">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCase.TC3_IFSC_RBI@64beebb7]" started-at="2023-07-08T20:22:29 IST" name="setup" finished-at="2023-07-08T20:22:31 IST" duration-ms="1610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC3_method()[pri:3, instance:testCase.TC3_IFSC_RBI@64beebb7]" started-at="2023-07-08T20:22:31 IST" name="TC3_method" finished-at="2023-07-08T20:22:39 IST" duration-ms="7922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC3_method -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCase.TC3_IFSC_RBI@64beebb7]" started-at="2023-07-08T20:22:39 IST" name="tearDown" finished-at="2023-07-08T20:22:39 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCase.TC3_IFSC_RBI -->
      <class name="testCase.MercuryTourRegistration">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCase.MercuryTourRegistration@4fad94a7]" started-at="2023-07-08T20:22:39 IST" name="setup" finished-at="2023-07-08T20:22:43 IST" duration-ms="3981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="navigateToSignUp()[pri:0, instance:testCase.MercuryTourRegistration@4fad94a7]" started-at="2023-07-08T20:22:43 IST" name="navigateToSignUp" finished-at="2023-07-08T20:22:46 IST" duration-ms="3384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToSignUp -->
        <test-method signature="mercuryTourRegistration()[pri:0, instance:testCase.MercuryTourRegistration@4fad94a7]" started-at="2023-07-08T20:22:46 IST" name="mercuryTourRegistration" finished-at="2023-07-08T20:22:51 IST" duration-ms="4235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mercuryTourRegistration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCase.MercuryTourRegistration@4fad94a7]" started-at="2023-07-08T20:22:51 IST" name="tearDown" finished-at="2023-07-08T20:22:51 IST" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCase.MercuryTourRegistration -->
      <class name="testCase.ReportListnerTest">
        <test-method is-config="true" signature="startReport()[pri:0, instance:testCase.ReportListnerTest@7813cb11]" started-at="2023-07-08T20:22:09 IST" name="startReport" finished-at="2023-07-08T20:22:09 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="failAssert()[pri:0, instance:testCase.ReportListnerTest@7813cb11]" started-at="2023-07-08T20:22:39 IST" name="failAssert" finished-at="2023-07-08T20:22:39 IST" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Vickey] but found [Parag]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Vickey] but found [Parag]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testCase.ReportListnerTest.failAssert(ReportListnerTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failAssert -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCase.ReportListnerTest@7813cb11]" started-at="2023-07-08T20:22:39 IST" name="getResult" finished-at="2023-07-08T20:22:39 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=failAssert status=FAILURE method=ReportListnerTest.failAssert()[pri:0, instance:testCase.ReportListnerTest@7813cb11] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="passAssert()[pri:0, instance:testCase.ReportListnerTest@7813cb11]" started-at="2023-07-08T20:22:39 IST" name="passAssert" finished-at="2023-07-08T20:22:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passAssert -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:testCase.ReportListnerTest@7813cb11]" started-at="2023-07-08T20:22:39 IST" name="getResult" finished-at="2023-07-08T20:22:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passAssert status=SUCCESS method=ReportListnerTest.passAssert()[pri:0, instance:testCase.ReportListnerTest@7813cb11] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testCase.ReportListnerTest@7813cb11]" started-at="2023-07-08T20:22:51 IST" name="endReport" finished-at="2023-07-08T20:22:51 IST" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testCase.ReportListnerTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
